{"ast":null,"code":"import axios from \"axios\";\nimport { BASE_URL } from \"../constants\";\nimport NotificationService from \"./NotificationService\";\nclass LikeService {\n  async getLikesByPostId(postId) {\n    try {\n      const accessToken = localStorage.getItem(\"accessToken\");\n      const config = {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      };\n      const response = await axios.get(`${BASE_URL}/likes/${postId}`, config);\n      return response.data;\n    } catch (error) {\n      throw new Error(\"Failed to get likes by post ID\");\n    }\n  }\n  async createLike(likeData, username, userId) {\n    try {\n      const accessToken = localStorage.getItem(\"accessToken\");\n      const config = {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      };\n      const response = await axios.post(`${BASE_URL}/likes`, likeData, config);\n      if (response.status === 201) {\n        try {\n          const body = {\n            userId: userId,\n            message: \"You have a new like\",\n            description: \"Your post liked by \" + username\n          };\n          await NotificationService.createNotification(body);\n        } catch (error) {}\n      }\n      return response.data;\n    } catch (error) {\n      throw new Error(\"Failed to create like\");\n    }\n  }\n  async deleteLike(likeId) {\n    try {\n      const accessToken = localStorage.getItem(\"accessToken\");\n      const config = {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      };\n      await axios.delete(`${BASE_URL}/likes/${likeId}`, config);\n    } catch (error) {\n      throw new Error(\"Failed to delete like\");\n    }\n  }\n}\nexport default new LikeService();","map":{"version":3,"names":["axios","BASE_URL","NotificationService","LikeService","getLikesByPostId","postId","accessToken","localStorage","getItem","config","headers","Authorization","response","get","data","error","Error","createLike","likeData","username","userId","post","status","body","message","description","createNotification","deleteLike","likeId","delete"],"sources":["D:/Current Project/PAF/PAFSkillFlow_Git/SkillFlow/Frontend/src/Services/LikeService.js"],"sourcesContent":["import axios from \"axios\";\nimport { BASE_URL } from \"../constants\";\nimport NotificationService from \"./NotificationService\";\n\nclass LikeService {\n  async getLikesByPostId(postId) {\n    try {\n      const accessToken = localStorage.getItem(\"accessToken\");\n      const config = {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      };\n      const response = await axios.get(`${BASE_URL}/likes/${postId}`, config);\n      return response.data;\n    } catch (error) {\n      throw new Error(\"Failed to get likes by post ID\");\n    }\n  }\n\n  async createLike(likeData, username, userId) {\n    try {\n      const accessToken = localStorage.getItem(\"accessToken\");\n      const config = {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      };\n      const response = await axios.post(`${BASE_URL}/likes`, likeData, config);\n      if (response.status === 201) {\n        try {\n          const body = {\n            userId: userId,\n            message: \"You have a new like\",\n            description: \"Your post liked by \" + username,\n          };\n\n          await NotificationService.createNotification(body);\n        } catch (error) {}\n      }\n      return response.data;\n    } catch (error) {\n      throw new Error(\"Failed to create like\");\n    }\n  }\n\n  async deleteLike(likeId) {\n    try {\n      const accessToken = localStorage.getItem(\"accessToken\");\n      const config = {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      };\n      await axios.delete(`${BASE_URL}/likes/${likeId}`, config);\n    } catch (error) {\n      throw new Error(\"Failed to delete like\");\n    }\n  }\n}\n\nexport default new LikeService();\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,cAAc;AACvC,OAAOC,mBAAmB,MAAM,uBAAuB;AAEvD,MAAMC,WAAW,CAAC;EAChB,MAAMC,gBAAgBA,CAACC,MAAM,EAAE;IAC7B,IAAI;MACF,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MACvD,MAAMC,MAAM,GAAG;QACbC,OAAO,EAAE;UACPC,aAAa,EAAG,UAASL,WAAY;QACvC;MACF,CAAC;MACD,MAAMM,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAE,GAAEZ,QAAS,UAASI,MAAO,EAAC,EAAEI,MAAM,CAAC;MACvE,OAAOG,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;IACnD;EACF;EAEA,MAAMC,UAAUA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAE;IAC3C,IAAI;MACF,MAAMd,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MACvD,MAAMC,MAAM,GAAG;QACbC,OAAO,EAAE;UACPC,aAAa,EAAG,UAASL,WAAY;QACvC;MACF,CAAC;MACD,MAAMM,QAAQ,GAAG,MAAMZ,KAAK,CAACqB,IAAI,CAAE,GAAEpB,QAAS,QAAO,EAAEiB,QAAQ,EAAET,MAAM,CAAC;MACxE,IAAIG,QAAQ,CAACU,MAAM,KAAK,GAAG,EAAE;QAC3B,IAAI;UACF,MAAMC,IAAI,GAAG;YACXH,MAAM,EAAEA,MAAM;YACdI,OAAO,EAAE,qBAAqB;YAC9BC,WAAW,EAAE,qBAAqB,GAAGN;UACvC,CAAC;UAED,MAAMjB,mBAAmB,CAACwB,kBAAkB,CAACH,IAAI,CAAC;QACpD,CAAC,CAAC,OAAOR,KAAK,EAAE,CAAC;MACnB;MACA,OAAOH,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1C;EACF;EAEA,MAAMW,UAAUA,CAACC,MAAM,EAAE;IACvB,IAAI;MACF,MAAMtB,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MACvD,MAAMC,MAAM,GAAG;QACbC,OAAO,EAAE;UACPC,aAAa,EAAG,UAASL,WAAY;QACvC;MACF,CAAC;MACD,MAAMN,KAAK,CAAC6B,MAAM,CAAE,GAAE5B,QAAS,UAAS2B,MAAO,EAAC,EAAEnB,MAAM,CAAC;IAC3D,CAAC,CAAC,OAAOM,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1C;EACF;AACF;AAEA,eAAe,IAAIb,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}